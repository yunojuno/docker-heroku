name: Docker Build

on:
  schedule:
    # Runs nightly to keep yunojuno/heroku in sync with Herokuâ€™s base image
    - cron: "0 23 * * *"

  push:
    branches:
      - master

  pull_request:
    types: [opened, synchronize, reopened]

# Cancel superseded builds on the same ref
concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-build-push:
    name: Build Docker image & push
    runs-on: ubuntu-22.04

    steps:
      # Fetch repository content
      - name: Check out code
        uses: actions/checkout@v4

      # QEMU provides multi-arch emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Buildx = BuildKit + multi-arch + cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: |
            image=moby/buildkit:latest

      # Generate tags/labels from Git refs
      - name: Instantiate Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: yunojuno/heroku
          tags: |
            type=sha
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=3.12-latest,enable=${{ github.ref == 'refs/heads/master' }}

      # Authenticate with Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build + push (with cache)
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
